# basic.stats(df_3, diploid =F) # Ho and He analyses
wc(df_3, diploid = F) # Fst
genet.dist(df_3, method = "WC84", diploid = F)
#"poppr"----
library(poppr)
df_2_genclone = as.genclone(df_2)
pop_file <- read.delim("~/Documents/project-diversity/msc-codes-fmb_genetic_diversity/amova-Ho-He/data/pop_file.txt", header = F)
df_2_genclone_strat <- as.genclone(df_2_genclone, strata=pop_file)
## AMOVA TESTS (not including outgroup individuals)
amova_results <- poppr.amova(df_2_genclone_strat, pop, cutoff=0.95)#, clonecorrect = TRUE)
# df_2 <- df2genind(loci, ploidy = 1, ind.names = isolates, pop = all_coutries, sep = "\t")
# strata(df_2) <- data.frame(pop(df_2))##
df_2 <- df2genind(loci, ploidy = 1, ind.names = isolates, pop = all_coutries, sep = "\t")
df_2_genclone = as.genclone(df_2)
pop_file <- read.delim("~/Documents/project-diversity/msc-codes-fmb_genetic_diversity/amova-Ho-He/data/pop_file.txt", header = F)
df_2_genclone_strat <- as.genclone(df_2_genclone, strata=pop_file)
## AMOVA TESTS (not including outgroup individuals)
amova_results <- poppr.amova(df_2_genclone_strat, pop, cutoff=0.95)#, clonecorrect = TRUE)
amova_results
# test for significance
amova_test <- randtest(amova_results, nrepet = 1000)
amova_test
plot(amova_test)
nei.dist(df_3, warning = TRUE)
df_3 <- genind2hierfstat(df_2)
nei.dist(df_3, warning = TRUE)
genet.dist(df_3, method = "WC84", diploid = F)
genet.dist(df_3, method = "Nei87", diploid = F)
as.array(genet.dist(df_3, method = "Nei87", diploid = F))
write.csv2(as.array(genet.dist(df_3, method = "Nei87", diploid = F)), "~/Documents/project-diversity/msc-codes-fmb_genetic_diversity/amova-Ho-He/results/")
write.csv2((genet.dist(df_3, method = "Nei87", diploid = F)), "~/Documents/project-diversity/msc-codes-fmb_genetic_diversity/amova-Ho-He/results/")
source('~/Documents/project-diversity/scripts/poppr.R')
wc84 <- genet.dist(df_3, method = "WC84", diploid = F)
wc84
Nei87 <- genet.dist(df_3, method = "Nei87", diploid = F)
Nei87
typeof(wc84)
wc84
table wc84
table(wc84)
(wc84)
source('~/Documents/project-diversity/scripts/poppr.R')
source('~/Documents/project-diversity/scripts/poppr.R')
## AMOVA TESTS (not including outgroup individuals)
amova_results <- poppr.amova(df_2_genclone_strat, pop, cutoff=0.95)#, clonecorrect = TRUE)
amova_results
# test for significance
amova_test <- randtest(amova_results, nrepet = 1000)
amova_test
df_2_genclone_strat
df_2_genclone_strat <- as.genclone(df_2_genclone, strata=pop_file)
df_2_genclone_strat
## AMOVA TESTS (not including outgroup individuals)
amova_results <- poppr.amova(df_2_genclone_strat, cutoff=0.95)#, clonecorrect = TRUE)
, pop
## AMOVA TESTS (not including outgroup individuals)
amova_results <- poppr.amova(df_2_genclone_strat, pop, cutoff=0.95)#, clonecorrect = TRUE)
amova_results
# test for significance
amova_test <- randtest(amova_results, nrepet = 1000)
amova_test
source('~/Documents/project-diversity/scripts/poppr.R')
setwd("~/Documents/code_challenge/challenge_3/scripts")
library("pophelper")
library("gridExtra")
library("gtable")
library("label.switching")
library("tidyr")
library("ggplot2")
# import metadata files
meta_data <- read.delim("../data/maize_samples.txt", header=T, stringsAsFactors=F)
# filter data to include only maize samples
#View(meta_data) # inspecting to allow for subsetting using dplyr
# read the admixture run file into a ‘qlist’ object
qlist <- readQ("../data/maize.3.Q",indlabfromfile = F)
# Adding group lables
onelabset <- meta_data[,2,drop=F]
twolabset <- meta_data[,1:2]
# Adding a new column by combining the sample ids with respective altitudes for plotting. Some individuals were sampled from the same altitude
meta_data$sampleID_altitude <- paste(meta_data$sample_id, meta_data$altitude, sep="_")
# Adding labels
rownames(qlist[[1]]) <- meta_data$sampleID_altitude
# Ploting the admixture results
p1 <- plotQ(qlist[1],exportplot=T,returnplot=T, showyaxis=T, showgrplab = F,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 4,
imgtype = "pdf",
outputfilename = "../results/admixture_plot",
height = 4,
width = 8,
dpi = 300,
units = "inches",
theme = "theme_grey") # labeling the sub populations
# p1$plot[[1]]
# grid.arrange(p1$plot[[1]])
# Exporting file to pdf
# pdf("../results/admixture_plot.pdf",         # File name
#     width = 8, height = 4, # Width and height in inches
#     bg = "white",          # Background color
#     colormodel = "cmyk",    # Color model (cmyk is required for most publications)
#     paper = "A4")          # Paper size
#
# # Creating a plot
# grid.arrange(p1$plot[[1]])
#
# # Closing the graphical device
# dev.off()
# Performing a Multiline Plot. It is the same as the previous plot but more clearer
p <- plotQMultiline(qlist,exportplot=T,returnplot=T, spl = 55, showyaxis=T,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 7,
imgtype = "pdf", # plotting
outputfilename = "../results/multiline_admixture_plot.pdf",
height = 10,
width = 8,
dpi = 300,
units = "in",
theme = "theme_grey") # labeling the sub populations
# grid.arrange(p$plot[[1]][[1]]) # plotting the Multiline Plot
# # Exporting file to pdf
# pdf("../results/multiline_admixture_plot.pdf",         # File name
#     width = 8, height = 7, # Width and height in inches
#     bg = "white",          # Background color
#     colormodel = "cmyk",    # Color model (cmyk is required for most publications)
#     paper = "A4")          # Paper size
#
# # Creating a plot
# grid.arrange(p$plot[[1]][[1]])
#
# # Closing the graphical device
# dev.off()
# install.packages(c("devtools","ggplot2","gridExtra","gtable","label.switching","tidyr"),dependencies=T)
#
# ## **install pophelper package from CRAN**
# install.packages('pophelper')
## **install pophelper package from GitHub**
# library(devtools)
# devtools::install_github('royfrancis/pophelper')
library("pophelper")
library("gridExtra")
library("gtable")
library("label.switching")
library("tidyr")
library("ggplot2")
# import metadata files
meta_data <- read.delim("../data/maize_samples.txt", header=T, stringsAsFactors=F)
# filter data to include only maize samples
#View(meta_data) # inspecting to allow for subsetting using dplyr
# read the admixture run file into a ‘qlist’ object
qlist <- readQ("../data/maize.3.Q",indlabfromfile = F)
# Adding group lables
onelabset <- meta_data[,2,drop=F]
twolabset <- meta_data[,1:2]
# Adding a new column by combining the sample ids with respective altitudes for plotting. Some individuals were sampled from the same altitude
meta_data$sampleID_altitude <- paste(meta_data$sample_id, meta_data$altitude, sep="_")
# Adding labels
rownames(qlist[[1]]) <- meta_data$sampleID_altitude
# Ploting the admixture results
p1 <- plotQ(qlist[1],exportplot=T,returnplot=T, showyaxis=T, showgrplab = F,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 4,
imgtype = "pdf",
outputfilename = "../results/admixture_plot",
height = 4,
width = 8,
dpi = 300,
units = "inches",
theme = "theme_grey") # labeling the sub populations
# Visualizing the plot using a different method
# p1$plot[[1]]
# grid.arrange(p1$plot[[1]])
# Exporting file to pdf
# pdf("../results/admixture_plot.pdf",         # File name
#     width = 8, height = 4, # Width and height in inches
#     bg = "white",          # Background color
#     colormodel = "cmyk",    # Color model (cmyk is required for most publications)
#     paper = "A4")          # Paper size
#
# # Creating a plot
# grid.arrange(p1$plot[[1]])
#
# # Closing the graphical device
# dev.off()
# Performing a Multiline Plot. It is the same as the previous plot but more clearer
p <- plotQMultiline(qlist,exportplot=T,returnplot=T, spl = 55, showyaxis=T,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 7,
imgtype = "pdf", # plotting
outputfilename = "../results/multiline_admixture_plot",
height = 10,
width = 8,
dpi = 300,
units = "in",
theme = "theme_grey") # labeling the sub populations
# Visualizing the plot using a different method
# grid.arrange(p$plot[[1]][[1]]) # plotting the Multiline Plot
# # Exporting file to pdf
# pdf("../results/multiline_admixture_plot.pdf",         # File name
#     width = 8, height = 7, # Width and height in inches
#     bg = "white",          # Background color
#     colormodel = "cmyk",    # Color model (cmyk is required for most publications)
#     paper = "A4")          # Paper size
#
# # Creating a plot
# grid.arrange(p$plot[[1]][[1]])
#
# # Closing the graphical device
# dev.off()
---
title: "admixture_visualization_markdown"
author: "Joseph Mulama Atemia"
date: "24/02/2021"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Load libraries
```{r libraries}
library("pophelper")
library("gridExtra")
library("gtable")
library("label.switching")
library("tidyr")
library("ggplot2")
```
## Import files and generate qlist object
```{r loading data, echo=TRUE}
# import metadata files
meta_data <- read.delim("../data/maize_samples.txt", header=T, stringsAsFactors=F)
# filter data to include only maize samples
#View(meta_data) # inspecting to allow for subsetting using dplyr
# read the admixture run file into a ‘qlist’ object
qlist <- readQ("../data/maize.3.Q",indlabfromfile = F)
# Adding group lables
onelabset <- meta_data[,2,drop=F]
twolabset <- meta_data[,1:2]
# Adding a new column by combining the sample ids with respective altitudes for plotting. Some individuals were sampled from the same altitude
meta_data$sampleID_altitude <- paste(meta_data$sample_id, meta_data$altitude, sep="_")
# Adding labels
rownames(qlist[[1]]) <- meta_data$sampleID_altitude
```
## Plotting admixture plot
```{r plot admixture, echo=TRUE}
# Ploting the admixture results
p1 <- plotQ(qlist[1],exportplot=T,returnplot=T, showyaxis=T, showgrplab = F,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 4,
imgtype = "pdf",
outputfilename = "../results/admixture_plot",
height = 4,
width = 8,
dpi = 300,
units = "inches",
theme = "theme_grey") # labeling the sub populations
p1$plot[[1]]
```
## Plotting multiline admixture plot
```{r plot multiline admixture, echo=TRUE}
p <- plotQMultiline(qlist,exportplot=T,returnplot=T, spl = 55, showyaxis=T,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 7,
imgtype = "pdf", # plotting
outputfilename = "../results/multiline_admixture_plot",
height = 10,
width = 8,
dpi = 300,
units = "in",
theme = "theme_grey") # labeling the sub populations
grid.arrange(p$plot[[1]][[1]]) # plotting the Multiline Plot
```
knitr::opts_chunk$set(echo = TRUE)
library("pophelper")
library("gridExtra")
library("gtable")
library("label.switching")
library("tidyr")
library("ggplot2")
library("pophelper")
library("gridExtra")
library("gtable")
library("label.switching")
library("tidyr")
library("ggplot2")
# import metadata files
meta_data <- read.delim("../data/maize_samples.txt", header=T, stringsAsFactors=F)
# filter data to include only maize samples
#View(meta_data) # inspecting to allow for subsetting using dplyr
# read the admixture run file into a ‘qlist’ object
qlist <- readQ("../data/maize.3.Q",indlabfromfile = F)
# Adding group lables
onelabset <- meta_data[,2,drop=F]
twolabset <- meta_data[,1:2]
# Adding a new column by combining the sample ids with respective altitudes for plotting. Some individuals were sampled from the same altitude
meta_data$sampleID_altitude <- paste(meta_data$sample_id, meta_data$altitude, sep="_")
# Adding labels
rownames(qlist[[1]]) <- meta_data$sampleID_altitude
# Ploting the admixture results
p1 <- plotQ(qlist[1],exportplot=T,returnplot=T, showyaxis=T, showgrplab = F,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 4,
imgtype = "pdf",
outputfilename = "../results/admixture_plot",
height = 4,
width = 8,
dpi = 300,
units = "inches",
theme = "theme_grey") # labeling the sub populations
p1$plot[[1]]
p <- plotQMultiline(qlist,exportplot=T,returnplot=T, spl = 55, showyaxis=T,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 7,
imgtype = "pdf", # plotting
outputfilename = "../results/multiline_admixture_plot",
height = 10,
width = 8,
dpi = 300,
units = "in",
theme = "theme_grey") # labeling the sub populations
grid.arrange(p$plot[[1]][[1]]) # plotting the Multiline Plot
library("pophelper")
library("gridExtra")
library("gtable")
library("label.switching")
library("tidyr")
library("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
unlink('admixture_visualization_markdown_cache', recursive = TRUE)
knit_with_parameters('~/Documents/code_challenge/challenge_3/scripts/admixture_visualization_markdown.Rmd')
R.version
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
library("pophelper")
library("gridExtra")
library("gtable")
library("label.switching")
library("tidyr")
library("ggplot2")
# import metadata files
meta_data <- read.delim("../data/maize_samples.txt", header=T, stringsAsFactors=F)
# filter data to include only maize samples
#View(meta_data) # inspecting to allow for subsetting using dplyr
# read the admixture run file into a ‘qlist’ object
qlist <- readQ("../data/maize.3.Q",indlabfromfile = F)
# Adding group lables
onelabset <- meta_data[,2,drop=F]
twolabset <- meta_data[,1:2]
# Adding a new column by combining the sample ids with respective altitudes for plotting. Some individuals were sampled from the same altitude
meta_data$sampleID_altitude <- paste(meta_data$sample_id, meta_data$altitude, sep="_")
# Adding labels
rownames(qlist[[1]]) <- meta_data$sampleID_altitude
# Ploting the admixture results
p1 <- plotQ(qlist[1],exportplot=T,returnplot=T, showyaxis=T, showgrplab = F,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 4,
imgtype = "pdf",
outputfilename = "../results/admixture_plot",
height = 4,
width = 8,
dpi = 300,
units = "inches",
theme = "theme_grey") # labeling the sub populations
p1$plot[[1]]
p <- plotQMultiline(qlist,exportplot=T,returnplot=T, spl = 55, showyaxis=T,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 7,
imgtype = "pdf", # plotting
outputfilename = "../results/multiline_admixture_plot",
height = 10,
width = 8,
dpi = 300,
units = "in",
theme = "theme_grey") # labeling the sub populations
grid.arrange(p$plot[[1]][[1]]) # plotting the Multiline Plot
sessionInfo()
# Installation of packages
list.of.packages <- c("gridExtra","gtable","label.switching","ggplot2","pophelper")
head(list.of.packages)
list.of.packages <- c("gridExtra","gtable","label.switching","ggplot2","pophelper")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
list.of.packages <- c("gridExtra","gtable","label.switching","ggplot2","pophelper", "consa")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
list.of.packages <- c("gridExtra","gtable","label.switching","ggplot2","pophelper", "consa")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"x"])]
if(length(new.packages)) install.packages(new.packages)
# Installation of packages
list.of.packages <- c("gridExtra","gtable","label.switching","ggplot2","pophelper")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"x"])]
if(length(new.packages)) install.packages(new.packages)
sessionInfo()
sessionInfo()
library("pophelper")
library("gridExtra")
library("gtable")
library("label.switching")
library("tidyr")
library("ggplot2")
# import metadata files
meta_data <- read.delim("../data/maize_samples.txt", header=T, stringsAsFactors=F)
# filter data to include only maize samples
#View(meta_data) # inspecting to allow for subsetting using dplyr
# read the admixture run file into a ‘qlist’ object
qlist <- readQ("../data/maize.3.Q",indlabfromfile = F)
# Adding group lables
onelabset <- meta_data[,2,drop=F]
twolabset <- meta_data[,1:2]
# Adding a new column by combining the sample ids with respective altitudes for plotting. Some individuals were sampled from the same altitude
meta_data$sampleID_altitude <- paste(meta_data$sample_id, meta_data$altitude, sep="_")
# Adding labels
rownames(qlist[[1]]) <- meta_data$sampleID_altitude
# Ploting the admixture results
p1 <- plotQ(qlist[1],exportplot=T,returnplot=T, showyaxis=T, showgrplab = F,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 4,
imgtype = "pdf",
outputfilename = "../results/admixture_plot",
height = 4,
width = 8,
dpi = 300,
units = "inches",
theme = "theme_grey") # labeling the sub populations
# Visualizing the plot using a different method
# p1$plot[[1]]
# grid.arrange(p1$plot[[1]])
# Exporting file to pdf
# pdf("../results/admixture_plot.pdf",         # File name
#     width = 8, height = 4, # Width and height in inches
#     bg = "white",          # Background color
#     colormodel = "cmyk",    # Color model (cmyk is required for most publications)
#     paper = "A4")          # Paper size
#
# # Creating a plot
# grid.arrange(p1$plot[[1]])
#
# # Closing the graphical device
# dev.off()
# Performing a Multiline Plot. It is the same as the previous plot but more clearer
p <- plotQMultiline(qlist,exportplot=T,returnplot=T, spl = 55, showyaxis=T,
ordergrp=TRUE, grplab = onelabset, basesize=11, useindlab = T, # Ordering by spp.
showindlab = T, subsetgrp="Zea mays ssp. mays", sortind = "all", # Selecting only maize samples
showtitle=T,showsubtitle=T,titlelab="Admixture plot", titlesize = 14, # Adding title and subtitle
subtitlelab="Population structure of Zea mays ssp. mays.",
subtitlesize = 12, showlegend=T,legendkeysize=8,legendtextsize=10,
legendlab=c("Cluster 1", "Cluster 2","Cluster 3"), indlabsize = 7,
imgtype = "pdf", # plotting
outputfilename = "../results/multiline_admixture_plot",
height = 10,
width = 8,
dpi = 300,
units = "in",
theme = "theme_grey") # labeling the sub populations
# Visualizing the plot using a different method
# grid.arrange(p$plot[[1]][[1]]) # plotting the Multiline Plot
# # Exporting file to pdf
# pdf("../results/multiline_admixture_plot.pdf",         # File name
#     width = 8, height = 7, # Width and height in inches
#     bg = "white",          # Background color
#     colormodel = "cmyk",    # Color model (cmyk is required for most publications)
#     paper = "A4")          # Paper size
#
# # Creating a plot
# grid.arrange(p$plot[[1]][[1]])
#
# # Closing the graphical device
# dev.off()
sessionInfo()
